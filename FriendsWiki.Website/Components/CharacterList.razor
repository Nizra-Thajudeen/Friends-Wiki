@using Microsoft.AspNetCore.Components.Web
@using FriendsWiki.Website.Models
@using FriendsWiki.Website.Services
@inject JsonFileCharacterService CharacterService
@using FriendsWiki.Website.Pages

<div class="row" style="justify-content: center">
    @foreach (var character in CharacterService.GetCharacters())
    {
        <div class="card" style="width: 18rem; margin: 0px 10px 15px 10px; padding: 0px 0px 0px 0px; border-radius: 12px">
          <img src="@character.Image" class="card-img-top" style="border-top-left-radius: 12px; border-top-right-radius: 12px" >
          <div class="card-body" style="border-radius: 12px">
              <h5 class="card-title card-heading">@character.Name</h5>
          </div>
          <div class="card-footer">
            <small class="text-muted">
                <button @onclick="(e => SelectedCharacter(character.Id))"
                    type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#characterModal">More Info</button>
            </small>
           </div>
        </div>
    }
</div>



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">


@if (selectedCharacter != null)
{
    <div class="modal fade" id="characterModal" tabindex="-1" aria-labelledby="characterModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="characterName">@selectedCharacter.Name</h5>
                    <button class="close" type="button" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
      </div>
      <div class="modal-body">
        <div class="card">
            <div class="card-img-top" style="background-image: url('@selectedCharacter.Image')"></div>
            <div class="card-body">
                <p class="card-text">@selectedCharacter.Gender</p>
            </div>
        </div>
     </div>
      <div class="modal-footer">
            @if(voteCount == 0)
            {
                <span>Be the first to vote!</span>
            }
            else
            {
                <span>@voteCount @voteLabel</span>
            }

            @for (int i = 0; i < 5; i++)
            {
                var currentStar = i+1;
                if(i <= currentRating)
                {
                    <span class="fa-star fa checked" @onclick="(e => SubmitRating(currentStar))"></span>
                }
                else
                {
                    <span class="fa-star fa" @onclick="(e => SubmitRating(currentStar))"></span>
                }
            }

        </div>
    </div>
  </div>
</div>

}


@code {
    Character selectedCharacter;
    string selectedCharacterId;

    void SelectedCharacter(string characterId)
    {
        selectedCharacterId = characterId;
        selectedCharacter = CharacterService.GetCharacters().First(x => x.Id == characterId);
        GetCurrentRating();
    }

    int currentRating = 0;
    int voteCount = 0;
    string voteLabel;

    void GetCurrentRating()
    {
        if (selectedCharacter.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedCharacter.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedCharacter.Ratings.Sum() / voteCount;
        }

        System.Console.WriteLine($"Current rating for {selectedCharacter.Id}: {currentRating}");
    }

    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedCharacter.Id}: {rating}");
        CharacterService.AddRating(selectedCharacterId, rating);
        SelectedCharacter(selectedCharacterId);
    }
}